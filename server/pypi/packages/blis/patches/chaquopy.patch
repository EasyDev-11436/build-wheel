--- src-original/blis/_src/frame/thread/bli_pthread.c   2019-09-30 15:48:55.000000000 +0000
+++ src/blis/_src/frame/thread/bli_pthread.c    2020-01-31 13:17:25.522009752 +0000
@@ -319,7 +319,8 @@
 
 // -- pthread_barrier_*() --
 
-#if defined(__APPLE__) || defined(_MSC_VER)
+// Chaquopy: added __ANDROID__ since these types aren't available until API level 24.
+#if defined(__APPLE__) || defined(_MSC_VER) || defined(__ANDROID__)
 
 // For OS X and Windows, we define barriers ourselves in terms of the rest
 // of the API, though for slightly different reasons: For Windows, we must
--- src-original/blis/_src/include/linux-generic/blis.h	2019-02-25 08:58:58.000000000 +0000
+++ src/blis/_src/include/linux-generic/blis.h	2019-06-27 19:04:24.832349421 +0000
@@ -1296,7 +1296,8 @@
 typedef pthread_condattr_t     bli_pthread_condattr_t;
 typedef pthread_once_t         bli_pthread_once_t;
 
-#if defined(__APPLE__)
+// Chaquopy: added __ANDROID__ since these types aren't available until API level 24,
+#if defined(__APPLE__) || defined(__ANDROID__)
 
 // For OS X, we must define the barrier types ourselves since Apple does
 // not implement barriers in their variant of pthreads.
--- src-original/setup.py	2019-02-27 14:07:38.000000000 +0000
+++ src/setup.py	2019-06-27 20:11:49.476746495 +0000
@@ -31,6 +31,10 @@
 
 MOD_NAMES = ["blis.cy", "blis.py"]
 
+# Chaquopy
+os.environ["BLIS_ARCH"] = "generic"
+os.environ["BLIS_COMPILER"] = os.environ["CC"]
+
 print("BLIS_COMPILER?", os.environ.get("BLIS_COMPILER", "None"))
 
 
@@ -222,7 +223,8 @@
 
 c_files = []  # get_c_sources(SRC)
 
-if len(sys.argv) > 1 and sys.argv[1] == "clean":
+# Chaquopy disabled: this bypasses our build-packages monkey patch.
+if False and len(sys.argv) > 1 and sys.argv[1] == "clean":
     clean(PWD)
 
 OBJ_DIR = tempfile.mkdtemp()
 